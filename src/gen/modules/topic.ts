/**
 * This file was automatically generated by `@sdutacm/onlinejudge3-api-sdk`.
 */

import * as Contract_Topic from '../../common/contracts/topic';

export class ApiTopicModule<R> {
  constructor(private readonly apiRequest: any) {}

  /**
   * API getTopicList.
   * @param req {Contract_Topic.IGetTopicListReq} The request data.
   * @param options {R} Extra request options.
   * @returns {Promise<Contract_Topic.IGetTopicListResp>} The response data.
   * @throws {ApiException} If the API call fails.
   * @throws {HttpException} If the HTTP request fails.
   * @throws {Error} If unknown error occurs.
   */
  getTopicList(req: Contract_Topic.IGetTopicListReq, options?: R): Promise<Contract_Topic.IGetTopicListResp> {
    return this.apiRequest('getTopicList', req, options);
  }

  /**
   * API getTopicDetail.
   * @param req {Contract_Topic.IGetTopicDetailReq} The request data.
   * @param options {R} Extra request options.
   * @returns {Promise<Contract_Topic.IGetTopicDetailResp>} The response data.
   * @throws {ApiException} If the API call fails.
   * @throws {HttpException} If the HTTP request fails.
   * @throws {Error} If unknown error occurs.
   */
  getTopicDetail(req: Contract_Topic.IGetTopicDetailReq, options?: R): Promise<Contract_Topic.IGetTopicDetailResp> {
    return this.apiRequest('getTopicDetail', req, options);
  }

  /**
   * API createTopic.
   * @param req {Contract_Topic.ICreateTopicReq} The request data.
   * @param options {R} Extra request options.
   * @returns {Promise<Contract_Topic.ICreateTopicResp>} The response data.
   * @throws {ApiException} If the API call fails.
   * @throws {HttpException} If the HTTP request fails.
   * @throws {Error} If unknown error occurs.
   */
  createTopic(req: Contract_Topic.ICreateTopicReq, options?: R): Promise<Contract_Topic.ICreateTopicResp> {
    return this.apiRequest('createTopic', req, options);
  }

  /**
   * API updateTopicDetail.
   * @param req {Contract_Topic.IUpdateTopicDetailReq} The request data.
   * @param options {R} Extra request options.
   * @returns {Promise<void>} The response data.
   * @throws {ApiException} If the API call fails.
   * @throws {HttpException} If the HTTP request fails.
   * @throws {Error} If unknown error occurs.
   */
  updateTopicDetail(req: Contract_Topic.IUpdateTopicDetailReq, options?: R): Promise<void> {
    return this.apiRequest('updateTopicDetail', req, options);
  }

  /**
   * API deleteTopic.
   * @param req {Contract_Topic.IDeleteTopicReq} The request data.
   * @param options {R} Extra request options.
   * @returns {Promise<void>} The response data.
   * @throws {ApiException} If the API call fails.
   * @throws {HttpException} If the HTTP request fails.
   * @throws {Error} If unknown error occurs.
   */
  deleteTopic(req: Contract_Topic.IDeleteTopicReq, options?: R): Promise<void> {
    return this.apiRequest('deleteTopic', req, options);
  }
}
