/**
 * This file was automatically generated by `@sdutacm/onlinejudge3-api-sdk`.
 */

import * as Contract_Problem from '../../common/contracts/problem';

export class ApiProblemModule<R> {
  constructor(private readonly apiRequest: any) {}

  /**
   * API getProblemList.
   * @param req {Contract_Problem.IGetProblemListReq} The request data.
   * @param options {R} Extra request options.
   * @returns {Promise<Contract_Problem.IGetProblemListResp>} The response data.
   * @throws {ApiException} If the API call fails.
   * @throws {HttpException} If the HTTP request fails.
   * @throws {Error} If unknown error occurs.
   */
  getProblemList(req: Contract_Problem.IGetProblemListReq, options?: R): Promise<Contract_Problem.IGetProblemListResp> {
    return this.apiRequest('getProblemList', req, options);
  }

  /**
   * API getProblemDetail.
   * @param req {Contract_Problem.IGetProblemDetailReq} The request data.
   * @param options {R} Extra request options.
   * @returns {Promise<Contract_Problem.IGetProblemDetailResp>} The response data.
   * @throws {ApiException} If the API call fails.
   * @throws {HttpException} If the HTTP request fails.
   * @throws {Error} If unknown error occurs.
   */
  getProblemDetail(req: Contract_Problem.IGetProblemDetailReq, options?: R): Promise<Contract_Problem.IGetProblemDetailResp> {
    return this.apiRequest('getProblemDetail', req, options);
  }

  /**
   * API createProblem.
   * @param req {Contract_Problem.ICreateProblemReq} The request data.
   * @param options {R} Extra request options.
   * @returns {Promise<Contract_Problem.ICreateProblemResp>} The response data.
   * @throws {ApiException} If the API call fails.
   * @throws {HttpException} If the HTTP request fails.
   * @throws {Error} If unknown error occurs.
   */
  createProblem(req: Contract_Problem.ICreateProblemReq, options?: R): Promise<Contract_Problem.ICreateProblemResp> {
    return this.apiRequest('createProblem', req, options);
  }

  /**
   * API updateProblemDetail.
   * @param req {Contract_Problem.IUpdateProblemDetailReq} The request data.
   * @param options {R} Extra request options.
   * @returns {Promise<void>} The response data.
   * @throws {ApiException} If the API call fails.
   * @throws {HttpException} If the HTTP request fails.
   * @throws {Error} If unknown error occurs.
   */
  updateProblemDetail(req: Contract_Problem.IUpdateProblemDetailReq, options?: R): Promise<void> {
    return this.apiRequest('updateProblemDetail', req, options);
  }

  /**
   * API setProblemTags.
   * @param req {Contract_Problem.ISetProblemTagsReq} The request data.
   * @param options {R} Extra request options.
   * @returns {Promise<void>} The response data.
   * @throws {ApiException} If the API call fails.
   * @throws {HttpException} If the HTTP request fails.
   * @throws {Error} If unknown error occurs.
   */
  setProblemTags(req: Contract_Problem.ISetProblemTagsReq, options?: R): Promise<void> {
    return this.apiRequest('setProblemTags', req, options);
  }
}
