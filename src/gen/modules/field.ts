/**
 * This file was automatically generated by `@sdutacm/onlinejudge3-api-sdk`.
 */

import * as Contract_Field from '../../common/contracts/field';

export class ApiFieldModule<R> {
  constructor(private readonly apiRequest: any) {}

  /**
   * API getFieldList.
   * @param req {Contract_Field.IGetFieldListReq} The request data.
   * @param options {R} Extra request options.
   * @returns {Promise<Contract_Field.IGetFieldListResp>} The response data.
   * @throws {ApiException} If the API call fails.
   * @throws {HttpException} If the HTTP request fails.
   * @throws {Error} If unknown error occurs.
   */
  getFieldList(req: Contract_Field.IGetFieldListReq, options?: R): Promise<Contract_Field.IGetFieldListResp> {
    return this.apiRequest('getFieldList', req, options);
  }

  /**
   * API getFieldDetail.
   * @param req {Contract_Field.IGetFieldDetailReq} The request data.
   * @param options {R} Extra request options.
   * @returns {Promise<Contract_Field.IGetFieldDetailResp>} The response data.
   * @throws {ApiException} If the API call fails.
   * @throws {HttpException} If the HTTP request fails.
   * @throws {Error} If unknown error occurs.
   */
  getFieldDetail(req: Contract_Field.IGetFieldDetailReq, options?: R): Promise<Contract_Field.IGetFieldDetailResp> {
    return this.apiRequest('getFieldDetail', req, options);
  }

  /**
   * API createField.
   * @param req {Contract_Field.ICreateFieldReq} The request data.
   * @param options {R} Extra request options.
   * @returns {Promise<Contract_Field.ICreateFieldResp>} The response data.
   * @throws {ApiException} If the API call fails.
   * @throws {HttpException} If the HTTP request fails.
   * @throws {Error} If unknown error occurs.
   */
  createField(req: Contract_Field.ICreateFieldReq, options?: R): Promise<Contract_Field.ICreateFieldResp> {
    return this.apiRequest('createField', req, options);
  }

  /**
   * API updateFieldDetail.
   * @param req {Contract_Field.IUpdateFieldDetailReq} The request data.
   * @param options {R} Extra request options.
   * @returns {Promise<void>} The response data.
   * @throws {ApiException} If the API call fails.
   * @throws {HttpException} If the HTTP request fails.
   * @throws {Error} If unknown error occurs.
   */
  updateFieldDetail(req: Contract_Field.IUpdateFieldDetailReq, options?: R): Promise<void> {
    return this.apiRequest('updateFieldDetail', req, options);
  }

  /**
   * API deleteField.
   * @param req {Contract_Field.IDeleteFieldReq} The request data.
   * @param options {R} Extra request options.
   * @returns {Promise<void>} The response data.
   * @throws {ApiException} If the API call fails.
   * @throws {HttpException} If the HTTP request fails.
   * @throws {Error} If unknown error occurs.
   */
  deleteField(req: Contract_Field.IDeleteFieldReq, options?: R): Promise<void> {
    return this.apiRequest('deleteField', req, options);
  }
}
