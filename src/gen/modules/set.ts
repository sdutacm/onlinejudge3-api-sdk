/**
 * This file was automatically generated by `@sdutacm/onlinejudge3-api-sdk`.
 */

import * as Contract_Set from '../../common/contracts/set';

export class ApiSetModule<R> {
  constructor(private readonly apiRequest: any) {}

  /**
   * API getSetList.
   * @param req {Contract_Set.IGetSetListReq} The request data.
   * @param options {R} Extra request options.
   * @returns {Promise<Contract_Set.IGetSetListResp>} The response data.
   * @throws {ApiException} If the API call fails.
   * @throws {HttpException} If the HTTP request fails.
   * @throws {Error} If unknown error occurs.
   */
  getSetList(req: Contract_Set.IGetSetListReq, options?: R): Promise<Contract_Set.IGetSetListResp> {
    return this.apiRequest('getSetList', req, options);
  }

  /**
   * API getSetDetail.
   * @param req {Contract_Set.IGetSetDetailReq} The request data.
   * @param options {R} Extra request options.
   * @returns {Promise<Contract_Set.IGetSetDetailResp>} The response data.
   * @throws {ApiException} If the API call fails.
   * @throws {HttpException} If the HTTP request fails.
   * @throws {Error} If unknown error occurs.
   */
  getSetDetail(req: Contract_Set.IGetSetDetailReq, options?: R): Promise<Contract_Set.IGetSetDetailResp> {
    return this.apiRequest('getSetDetail', req, options);
  }

  /**
   * API createSet.
   * @param req {Contract_Set.ICreateSetReq} The request data.
   * @param options {R} Extra request options.
   * @returns {Promise<Contract_Set.ICreateSetResp>} The response data.
   * @throws {ApiException} If the API call fails.
   * @throws {HttpException} If the HTTP request fails.
   * @throws {Error} If unknown error occurs.
   */
  createSet(req: Contract_Set.ICreateSetReq, options?: R): Promise<Contract_Set.ICreateSetResp> {
    return this.apiRequest('createSet', req, options);
  }

  /**
   * API updateSetDetail.
   * @param req {Contract_Set.IUpdateSetDetailReq} The request data.
   * @param options {R} Extra request options.
   * @returns {Promise<void>} The response data.
   * @throws {ApiException} If the API call fails.
   * @throws {HttpException} If the HTTP request fails.
   * @throws {Error} If unknown error occurs.
   */
  updateSetDetail(req: Contract_Set.IUpdateSetDetailReq, options?: R): Promise<void> {
    return this.apiRequest('updateSetDetail', req, options);
  }

  /**
   * API deleteSet.
   * @param req {Contract_Set.IDeleteSetReq} The request data.
   * @param options {R} Extra request options.
   * @returns {Promise<void>} The response data.
   * @throws {ApiException} If the API call fails.
   * @throws {HttpException} If the HTTP request fails.
   * @throws {Error} If unknown error occurs.
   */
  deleteSet(req: Contract_Set.IDeleteSetReq, options?: R): Promise<void> {
    return this.apiRequest('deleteSet', req, options);
  }
}
