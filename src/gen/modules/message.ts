/**
 * This file was automatically generated by `@sdutacm/onlinejudge3-api-sdk`.
 */

import * as Contract_Message from '../../common/contracts/message';

export class ApiMessageModule<R> {
  constructor(private readonly apiRequest: any) {}

  /**
   * API getMessageList.
   * @param req {Contract_Message.IGetMessageListReq} The request data.
   * @param options {R} Extra request options.
   * @returns {Promise<Contract_Message.IGetMessageListResp>} The response data.
   * @throws {ApiException} If the API call fails.
   * @throws {HttpException} If the HTTP request fails.
   * @throws {Error} If unknown error occurs.
   */
  getMessageList(req: Contract_Message.IGetMessageListReq, options?: R): Promise<Contract_Message.IGetMessageListResp> {
    return this.apiRequest('getMessageList', req, options);
  }

  /**
   * API sendMessage.
   * @param req {Contract_Message.ISendMessageReq} The request data.
   * @param options {R} Extra request options.
   * @returns {Promise<void>} The response data.
   * @throws {ApiException} If the API call fails.
   * @throws {HttpException} If the HTTP request fails.
   * @throws {Error} If unknown error occurs.
   */
  sendMessage(req: Contract_Message.ISendMessageReq, options?: R): Promise<void> {
    return this.apiRequest('sendMessage', req, options);
  }

  /**
   * API batchSendMessage.
   * @param req {Contract_Message.IBatchSendMessageReq} The request data.
   * @param options {R} Extra request options.
   * @returns {Promise<void>} The response data.
   * @throws {ApiException} If the API call fails.
   * @throws {HttpException} If the HTTP request fails.
   * @throws {Error} If unknown error occurs.
   */
  batchSendMessage(req: Contract_Message.IBatchSendMessageReq, options?: R): Promise<void> {
    return this.apiRequest('batchSendMessage', req, options);
  }

  /**
   * API updateMessageRead.
   * @param req {Contract_Message.IUpdateMessageReadReq} The request data.
   * @param options {R} Extra request options.
   * @returns {Promise<void>} The response data.
   * @throws {ApiException} If the API call fails.
   * @throws {HttpException} If the HTTP request fails.
   * @throws {Error} If unknown error occurs.
   */
  updateMessageRead(req: Contract_Message.IUpdateMessageReadReq, options?: R): Promise<void> {
    return this.apiRequest('updateMessageRead', req, options);
  }
}
